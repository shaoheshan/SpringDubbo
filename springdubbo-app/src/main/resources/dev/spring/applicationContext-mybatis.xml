<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans" 	   xmlns:aop="http://www.springframework.org/schema/aop" 	   xmlns:context="http://www.springframework.org/schema/context"	   xmlns:mvc="http://www.springframework.org/schema/mvc" 	   xmlns:tx="http://www.springframework.org/schema/tx" 	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	   xmlns:p="http://www.springframework.org/schema/p"	   xmlns:util="http://www.springframework.org/schema/util"	   xsi:schemaLocation="http://www.springframework.org/schema/aop 		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 		http://www.springframework.org/schema/beans 		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 		http://www.springframework.org/schema/context 		http://www.springframework.org/schema/context/spring-context-3.2.xsd 		http://www.springframework.org/schema/tx 		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd		http://www.springframework.org/schema/util		http://www.springframework.org/schema/util/spring-util-3.2.xsd">           <bean id="jdbcContextHolder" class="com.heshan.framework.db.dynamic.JdbcContextHolder"/>	  <!-- 默认必须为主库，用于事务的控制 -->	  <!-- targetDataSources 若不是对象，则默认用的是JndiDataSourceLookup 从JNDI中查找 -->      <bean id="dynamicDataSource" class="com.heshan.framework.db.dynamic.DynamicDataSource" >        	<property name="jdbcContextHolder" ref="jdbcContextHolder"/>        	<property name="dataSourceLookup" >    			<bean  class="org.springframework.jdbc.datasource.lookup.BeanFactoryDataSourceLookup"></bean>    		</property>    		<property name="targetDataSources">   	            <map  key-type="java.lang.String" >   	                <entry key="master" value-ref="masterDataSource"/>	                <entry key="slave" value-ref="slaveDataSource"/>	            </map>	        </property>   	        <!-- 默认必须为主库，用于事务的控制 -->        	<property name="defaultTargetDataSource" ref="masterDataSource"/>       	</bean>    		<!-- 事务控制到方法级，因为开启事务必然读写都是主库 -->	<!-- 开启事务注解驱动 -->	<tx:annotation-driven transaction-manager="transactionManager"/>		<!-- 定义事务管理器（声明式的事务） -->    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">        <property name="dataSource" ref="dynamicDataSource" />         <qualifier value="transactionManager"/>    </bean>	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">		<property name="basePackage" value="com.heshan.dubbo.dao" />	</bean>	<!-- mybatis and spring -->	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">				<property name="dataSource" ref="dynamicDataSource"></property>		<property name="mapperLocations" value="classpath:com/heshan/dubbo/model/mapper/*.xml"></property>		<property name="typeAliasesPackage" value="com.heshan.dubbo.model" />				<property name="configurationProperties">			<props>				<!-- 启用自动映射，下划线格式到驼峰式 -->	            <prop key="mapUnderscoreToCamelCase">true</prop>	        </props>		</property>				<property name="plugins">			<list>				<bean class="com.heshan.framework.db.dynamic.ReadWriteSplitting">					<property name="jdbcContextHolder" ref="jdbcContextHolder"/>				</bean>				<bean class="com.heshan.framework.db.dynamic.LogDaoInterceptor">				</bean>			</list>		</property>			</bean>	</beans>